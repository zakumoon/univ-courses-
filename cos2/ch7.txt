					บทที่7 ต้นไม้Tree

	*ใช้ในการแบ่งโครงสร้างของโปรแกรม เพื่อไม่ให้สับสน
	*ต้นไม้  กราฟที่ไม่มีทิศาง และมีเส้นนเดี่ยว ไม่มีfor กับparallen
	*ต้นไม้ทั้งหมด n จุด จะมีจำนวนกิ่ง(ด้าน) e = n - 1จุด


	-จุดใบไม้ --> จุดสันโดษ Isolated leaf -> คือมีุดโดดเดี่ยว
	-จุดภายใน Internat--> จุดที่มีเส้นทางมากกว่า 1เส้น / >1เส้น
      
      *ต้นไม้ที่มีราก --->เป็นกราฟที่ระบุจุดใดจึดนึงเป็นราก (Root)

      			Root Distonary
		      
		      ( 0 ) -------> root
		       /|\
		      / | \
		     /  |  \
		   {B	F   \
		    |	     G } --------->Internal 
		    |	    /|\
		    |	   / | \
		    |	  /  |  \
		  { C	 H   I	J  } -------> Internal 
		   /\	 |     / \
		  /  \   |    /   \
		 /    \  |   /     \
		/      \ K   L	    M } --------> Isolated leaf
	    {  D	E


	*level ของ Tree ---> มีหลายlevel เช่น    		 LO
     *ความสูงของ Tree --> นับlevel ลงจากRoot ไปlvlสุดท้าย	 /\
					      		/  \
					     	      L1   L1
					              /\
					    	     /  \
					   	    /    \
					  	   /      \
					 	 L2	  L3

		*การแวะผ่านต้นไม้ Tree Traversal --->

				25
				 ^
				/ \
					--> 1. Pre-Order traversal = {Node, left, Right}, (NLR)
			      /     \
					--> 2. In- Order "     "   = {Left, Node, Right}, (LNR)
			    /	      \
					 --> 3. Post-Order  "  "   = {Left, Right, Node}, (LRN)				
			  /		\
			15		 50
			^		  ^

		     /	  \ 		/   \
				       /     \
		   /	    \	       35     70
		   				    1. Pre-Order= {25, 15, 10, 4, 12, 22, 18, 24}       
		 /	       \		    2. In-Order = {4, 10, 12, 15, 18 ..... 70 }
		10		22		    3. Post-Order = {4, 12, 10, 18, 24, 22, 15, ...25}
		^		^
			      /	  \
	     /     \	     /     \
			    18	    24
	   /          \
	 4		12



	**ต้นไม้การค้น Binary Search Tree: BST  => การเพิ่มโนดเข้าไปใน BST มี 3 กรณี  คือ
		1. เมื่อข้อมูลนั้นมีอแล้ว             
		2. ต้องเป็นค่าน้อยกว่าโหนดปัจจุบัน   
		3. ต้องเป็นค่ามากกว่าโหนดปัจจุบัน     
	   ***โหนดต้องเป็น > || < โหนดปัจจุบัน แต่ห้าม == โหนดปัจจุบัน***

				
				25
				 ^
				/ \
			      /     \
		(25 > 15)	
			    /	      \
					    (25 < 50)		
			  /		\
			15		 50
			^		  ^
				   (50>35)     
	(15 > 10)    /	  \ (15<22)	/   \ (50 < 70)
				       /     \
		   /	     \	       35     70
		 /	       \		   
		10		22		    
		^	(22>18)	^
		(10 < 12)     /	  \   (22 < 24)
	     /     \	     /     \
	(10>4)		    18	    24
	   /          \		
	 4		12


	 ***โหนดต้องเป็น > || < โหนดปัจจุบัน แต่ห้าม == โหนดปัจจุบัน***

	*ต้นไม้ทอดข้าม Minimum Spanning Tree --> การหาผลร่วมของทุกกิ่งที่มีค่าน้อยที่สุด และไปไหนที่ที่ใก้ที่สุด








